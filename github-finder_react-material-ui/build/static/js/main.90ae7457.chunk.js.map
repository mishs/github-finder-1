{"version":3,"sources":["components/ResultsTable.js","Pages/MainBody.js","App/App.js","reportWebVitals.js","index.js"],"names":["columns","name","cell","row","src","avatar_url","width","alt","sortable","selector","right","withStyles","ResultsTable","display","flexDirection","fontWeight","lineHeight","textRendering","height","props","classes","className","Card","title","data","users","defaultSortField","sortIcon","pagination","MainBody","useState","searchQuery","setSearchQuery","query","setQuery","isLoading","setisLoading","setUsers","useEffect","axios","get","then","response","items","Styles","Container","fixed","onSubmit","e","preventDefault","alert","TextField","label","margin","variant","onChange","target","value","handleQuery","type","color","styled","div","AppStyles","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAkBMA,EAAU,CACd,CACEC,KAAM,SACNC,KAAM,SAAAC,GAAG,OAAI,qBAAKC,IAAKD,EAAIE,WAAYC,MAAM,KAAKC,IAAK,MACvDC,UAAU,GAEZ,CACEP,KAAM,QACNQ,SAAU,QACVD,UAAU,GAEZ,CACEP,KAAM,OACNQ,SAAU,OACVD,UAAU,EACVE,OAAO,IAsBKC,cAjDF,CACZC,aAAc,CACZC,QAAS,OACTC,cAAe,SACfC,WAAY,MACZC,WAAY,UACZC,cAAe,qBACfX,MAAO,OACPY,OAAQ,SAyCIP,EAlBK,SAACQ,GAAW,IACvBC,EAAYD,EAAZC,QACR,OACE,qBAAKC,UAAWD,EAAQR,aAAxB,SACE,cAACU,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,MAAM,QACNvB,QAASA,EACTwB,KAAML,EAAMM,MACZC,iBAAiB,QACjBC,SAAU,cAAC,IAAD,IACVC,YAAU,W,0BCzCL,SAASC,IAAY,IAAD,EACWC,mBAAS,IADpB,mBACxBC,EADwB,KACXC,EADW,OAEWF,mBAAS,IAFpB,mBAExBG,EAFwB,KAEjBC,EAFiB,OAGWJ,oBAAS,GAHpB,mBAGxBK,EAHwB,KAGbC,EAHa,OAIWN,mBAAS,IAJpB,mBAIxBL,EAJwB,KAIjBY,EAJiB,KA4B/B,OAtBAC,qBAAU,WACe,KAAjBP,IACAK,GAAa,GAEbG,IAAMC,IAAN,gDAAmDT,EAAnD,aACCU,MAAK,SAAAC,GACF,IAAMlB,EAAOkB,EAASlB,KAAKmB,MAC3BN,EAASb,GACTY,GAAa,SAGvB,CAACL,IAYC,cAACa,EAAD,UACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,uBAAMC,SARlB,SAAsBC,GAClBA,EAAEC,iBACQ,KAAVhB,EAAeiB,MAAM,qBAAuBlB,EAAeC,IAMnD,UACI,cAACkB,EAAA,EAAD,CACI9B,UAAU,eACV+B,MAAM,SACNC,OAAO,SACPC,QAAQ,WACRC,SAAU,SAACP,GAAD,OAlB9B,SAAqBA,GACjBd,EAASc,EAAEQ,OAAOC,OAiBeC,CAAYV,MAGjC,uBAAOW,KAAK,SAASF,MAAOtB,EAAY,aAAe,SAAUmB,QAAQ,YAAYM,MAAM,eAG/F,cAAC,EAAD,CAAcnC,MAAOA,SAMrC,I,EAAMmB,EAASiB,UAAOC,IAAV,uzBC3CZ,IAAMC,EAAYF,UAAOC,IAAV,sHAOAE,EAff,WACE,OACE,cAACD,EAAD,UACI,cAAClC,EAAD,OCIOoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.90ae7457.chunk.js","sourcesContent":["import React from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport Card from \"@material-ui/core/Card\";\nimport SortIcon from \"@material-ui/icons/ArrowDownward\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst style = {\n  ResultsTable: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontWeight: '400',\n    lineHeight: '1.42857',\n    textRendering: 'optimizeLegibility',\n    width: '100%',\n    height: '100%'\n  }\n}\n\nconst columns = [\n  {\n    name: \"Avatar\",\n    cell: row => <img src={row.avatar_url} width=\"40\" alt= \"\"/>,\n    sortable: false\n  },\n  {\n    name: \"Login\",\n    selector: \"login\",\n    sortable: true\n  },\n  {\n    name: \"Type\",\n    selector: \"type\",\n    sortable: true,\n    right: true\n  }\n];\n\nconst ResultsTable = (props) => {\n  const { classes } = props\n  return (\n    <div className={classes.ResultsTable}>\n      <Card>\n        <DataTable\n          title=\"Users\"\n          columns={columns}\n          data={props.users}\n          defaultSortField=\"title\"\n          sortIcon={<SortIcon />}\n          pagination\n        />\n      </Card>\n    </div>\n  );\n}\n\nexport default  withStyles(style)(ResultsTable);\n","import { Container } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport ResultsTable from '../components/ResultsTable';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport styled from 'styled-components';\n\nexport default function MainBody() {\n    const [searchQuery, setSearchQuery]     = useState('');\n    const [query, setQuery]                 = useState('');\n    const [isLoading, setisLoading]         = useState(false);\n    const [users, setUsers]                 = useState([]);\n\n    useEffect(() => {\n        if (searchQuery !==  '') {\n            setisLoading(true);\n\n            axios.get(`https://api.github.com/search/users?q=${searchQuery}in:login`)\n            .then(response => {\n                const data = response.data.items;\n                setUsers(data);\n                setisLoading(false);\n            });\n        }\n    },[searchQuery]);\n\n    function handleQuery(e) {\n        setQuery(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        query === '' ? alert('Please enter text') : setSearchQuery(query);\n    }\n\n    return (\n        <Styles>\n            <Container fixed>      \n                <form onSubmit={handleSubmit}>                       \n                    <TextField \n                        className=\"search-input\"\n                        label=\"search\" \n                        margin=\"normal\" \n                        variant=\"outlined\" \n                        onChange={(e) => handleQuery(e)}\n                    />\n\n                    <input type=\"submit\" value={isLoading ? 'Loading...' : 'Search'} variant=\"contained\" color=\"primary\" />\n                </form>\n                \n                <ResultsTable users={users} />\n            </Container>\n        </Styles>\n    )\n}\n\nconst Styles = styled.div`\n    padding: 5rem 0;\n    form {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-bottom: 2rem;\n\n        .search-input {\n            width: 360px;\n            margin: 0 2rem 0 0;\n            \n        }\n\n        input[type=\"submit\"] {\n            width: 150px;\n            height: 56px;\n            padding: 6px 16px;\n            font-size: 0.875rem;\n            min-width: 64px;\n            font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n            font-weight: 500;\n            line-height: 1.75;\n            border-radius: 4px;\n            border: none;\n            color: #fff;\n            background-color: #3f51b5;\n            text-transform: uppercase;\n            cursor: pointer;\n        }\n    }\n`","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport MainBody from '../Pages/MainBody';\n\nfunction App() {\n  return (\n    <AppStyles>\n        <MainBody />\n    </AppStyles>\n  );\n}\n\nconst AppStyles = styled.div`\n  background-color: #cfe8fc;\n  height: 100vh;\n  margin: '2rem auto';\n  width: '100%';\n`\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}